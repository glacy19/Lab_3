---
title: "Lab 3: COVID-19"
subtitle: "Ecosystem Science and Sustainabilty 330"
author:
  - name: Genesis Lacy 
    email: glacy19@colostate.edu
output-dir: "docs"

format: 
  html:
    self-contained: true
    
execute: 
  echo: true
editor: visual
---

Q1: Easy access to open data is important to provide transparency with the public as well as providing data for those interested in the results and for people who are interested and/or are working on data analysis.

```{r}
url = "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv"
read.csv(url)

```

Q2: Creating a subset to generate cumulative cases and new cases for the top 5 counties.

```{r}
library(tidyverse); library(flextable)
data = read_csv('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv')

my.date <- as.Date("2022-02-01")
my.state <- "Colorado"

co_data <- data %>%
  filter(state == my.state) %>%
  arrange(county, date) %>%
  group_by(county) %>%
  mutate(new_cases = cases - lag(cases, default = first (cases)),
        new_deaths = deaths - lag (deaths, default = first(deaths))) %>%
  ungroup()

```

```{r}
latest_data <- co_data %>%
  filter(date == my.date)

top5_cumulative_cases <- latest_data %>%
  arrange(desc(cases)) %>%
  slice_head(n = 5) %>%
  select(county, cases)
  
top5_new_cases <- latest_data %>%
  arrange(desc(new_cases)) %>%
  slice_head(n = 5) %>%
  select(county, new_cases)

top5_cumulative_cases %>%
  flextable() %>%
  set_caption("Top 5 counties by cumulative cases")

top5_new_cases %>%
  flextable() %>%
  set_caption("Top 5 counties by new cases")
```

Q3:Normalizing Data - adding population data


```{r}
pop_url <- 'https://www2.census.gov/programs-surveys/popest/datasets/2020-2023/counties/totals/co-est2023-alldata.csv'
pop_data <- read_csv(pop_url)

pop_data <- pop_data %>%
  mutate(
    STATE = str_pad(as.character(STATE), 2, pad = "0"),
    COUNTY = str_pad(as.character(COUNTY), 3, pad = "0"),
    FIPS = paste0(STATE, COUNTY)
  
  ) %>%
  filter(COUNTY != "000") %>%
  select(FIPS,STNAME,CTYNAME, contains("2021"))

glimpse(pop_data)



```

After Modification we're only looking at columns we filtered to contain "2021" and "name". A lot of the values are doubles and there are also a few characters. 

What are the range of populations seen in Colorado counties in 2021?

```{r}
co_data <- co_data %>%
  left_join(pop_data, by = c("fips" = "FIPS"))

co_data <- co_data %>%
  mutate(
    pop_2021 = coalesce(POPESTIMATE2021, 1) ,
    cumulative_per_capita = cases / pop_2021,
    new_cases_per_capita = new_cases / pop_2021, 
    new_deaths_per_capita = new_deaths / pop_2021
  )
  
  latest_data <- co_data %>%
    filter(date == my.date)
  
top_cumulative_per_capita <- latest_data%>%
  arrange(desc(cumulative_per_capita))%>%
  slice_head(n = 5)%>%
  select(county, cumulative_per_capita)%>%
  flextable()%>%
  set_caption("Top 5 Counties by Cumulative Cases per Capita")

top_new_per_capita <- latest_data%>%
  arrange(desc(new_cases_per_capita))%>%
  slice_head(n = 5)%>%
  select(county, new_cases_per_capita)%>%
  flextable()%>%
  set_caption("Top 5 Counties by New Cases per Capita")

top_cumulative_per_capita
top_new_per_capita
```
Q4: Rolling Thresholds - Filtering the merged COVID/ Population data to only include the past 14 days. 

```{r}
library(tidyverse)
my.date <- as.Date("2022-02-01")
date_14_days_ago <- my.date - 14

co_last_14 <- co_data%>%
  filter(date >= date_14_days_ago & date <= my.date)
county_14d_summary <- co_last_14%>%
  group_by(county)%>%
  summarize(
    total_new_cases = sum(new_cases, na.rm = TRUE),
    population = first(pop_2021),
    new_cases_per_100k = (total_new_cases / population) * 100000) %>%
    
ungroup()

top5_new_cases <- county_14d_summary%>%
  arrange(desc(new_cases_per_100k)) %>%
  slice_head(n = 5)%>%
  select(county, new_cases_per_100k) %>%
  flextable() %>%
  set_caption("Top 5 Counties by New Cases per 100,000 residents in the last 14 days")

watch_list_count <- county_14d_summary%>%
  filter(new_cases_per_100k > 100) %>%
  nrow()

top5_new_cases

```
Counties that meet the watch list conditions- 64 total counties. 
```{r}
print(watch_list_count)
```

Q5: Death toll- finding the ratio of total COVID deaths per county in 2021 of all recorded deaths. Create a plot that visualizes all counties where COVID deaths account for 20% or more of the annual death toll. 

```{r}
library(dplyr)

covid_deaths_2021 <- co_data %>%
  filter(lubridate::year(date) == 2021) %>%
  group_by(fips, county) %>%
  summarize(total_covid_deaths = sum(new_deaths, na.rm = TRUE)) %>%
  ungroup()

covid_deaths_2021 <- covid_deaths_2021 %>%
  mutate(fips = as.character(fips))

pop_data <- pop_data %>%
  mutate(FIPS = as.character(FIPS))


death_data <- covid_deaths_2021%>%
  left_join(pop_data%>% select(fips, county,total_covid_deaths, by = "FIPS"))
            
death_data <- death_data %>%
   mutate(covid_death_pct = (total_covid_deaths /DEATHS2021) * 100) %>%
   filter(!is.na(covid_death_pct))

high_covid_impact <- death_data%>%
 filter(covid_death_pct >= 20)
 

library(ggplot2)

ggplot(high_covid_impact, aes(x = reorder(county.x,covid_death_pct), y = covid_death_pct)) +
  geom_bar( stat = "identity", fill = "maroon")+
  coord_flip()+ 
  labs(
    title = "Counties where COVID-19 Deaths Account for 20% of all Deaths in 2021",
x = "County",
y = "Percentage of Total Deaths (%)"
  ) +
  theme_minimal()
```


Q6: Looking at the story of New York, Colorado,Alabama and Ohio, make a faceted bar plot showing the number of daily, new cases at the state level. 

```{r}
library(dplyr)
library(zoo)

str(co_data)

selected_states <- c("New York", "Colorado", "Alabama", "Ohio")

state_covid_data <- co_data %>%
  filter(state %in% selected_states) %>%
  group_by(state, date) %>%
  summarize(
    total_cases = sum(cases, na.rm = TRUE),
    total_new_cases = sum(cases - lag(cases, default = first(cases)), na.rm = TRUE)
  ) %>%
ungroup()

state_covid_data<- state_covid_data%>%
  arrange(date) %>%
  group_by(state) %>%
  mutate(
    rolling_avg_new_cases = rollmean(total_new_cases, k = 7, fill = NA, align = "right")) %>%
ungroup()

ggplot(state_covid_data, aes(x = date, y = total_new_cases, fill = state)) +
  geom_col(show.legend = FALSE, alpha = 0.6)+
  geom_line(aes(y = rolling_avg_new_cases, color = state, linewidth = 1.2)) +
  facet_wrap(~state, scales = "free_y") +
  theme_minimal()+
  labs(
    title = "Daily New COVID Cases with 7 day Rolling Mean",
  x = "Date",
  y = "New Cases",
  caption = "Data Source: NY Times COVID-19 Dataset",
  )+
theme(legen.position = "bottom") 

pop_data_co <- pop_data %>% filter(STNAME == "Colorado")

pop_data_co <- pop_data_co %>%
  rename(state = STNAME)


pop_data_co_2021 <- pop_data_co
  summarize(population = sum(POPESTIMATE2021, na.rm = TRUE))

state_covid_per_capita <- state_covid_data %>%
  left_join(state_pop_data, by = "state") %>%
  mutate(
    cases_per_100k = (total_new_Cases / population) * 100000,
    rolling_avg_per_100k = rollmean(cases_per_100k, k = 7, fill = NA, align = "right")
  )

ggplot(state_covid_per_capita, aes(x = date, y = rolling_avg_per_100k, color = state))+
  geom_line(size = 1.2) +
  theme_minimal()+
    labs(
      title = "7 Day Rolling Average of COVID Cases per 100K Populaation",
      x = "Date",
      y = "New Cases per 100,000",
      caption = "Data Source: NY Times COVID-19 Dataset"
    )+
theme(legend.position = "bottom")
```

Q7:


